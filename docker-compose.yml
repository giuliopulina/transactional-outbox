version: '2.4'
services:
  employee-service:
    build: ./employee-service
    container_name: employee-service
    ports:
      - "8001:8080"
      - "5005:5005"
    environment:
      _JAVA_OPTIONS: >
       -Xdebug
       -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
  consumer-service-1:
    build: ./consumer-service
    container_name: consumer-service-1
    ports:
      - "8002:8080"
      - "5006:5006"
    environment:
      - INPUT_QUEUE=consumer_1_queue.fifo
      - _JAVA_OPTIONS=-Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
    depends_on:
      localstack:
        condition: service_healthy
  consumer-service-2:
    build: ./consumer-service
    container_name: consumer-service-2
    ports:
      - "8003:8080"
    environment:
      - INPUT_QUEUE=consumer_1_queue.fifo
    depends_on:
      localstack:
        condition: service_healthy
  postgres:
    image: postgres:12-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  localstack:
    image: localstack/localstack:3.1.0
    container_name: localstack
    healthcheck:
      test: ["CMD-SHELL", "awslocal --region eu-central-1 sns list-topics && awslocal --region eu-central-1 sqs list-queues"]
    environment:
      - SERVICES=sqs,sns
      - LOCALSTACK_HOST=localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
    ports:
      - "4566-4599:4566-4599"
    volumes:
      - "./.localstack/setup.sh:/etc/localstack/init/ready.d/setup.sh"